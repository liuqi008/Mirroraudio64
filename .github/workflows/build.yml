name: Build MirrorAudio
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
          cache: true
          cache-dependency-path: MirrorAudio.csproj

      - name: Restore
        run: dotnet restore ./MirrorAudio.csproj --nologo

      - name: Build x64 (Release)
        run: dotnet build ./MirrorAudio.csproj -c Release --no-restore --nologo

      - name: Verify output & list files
        shell: pwsh
        run: |
          $outDir = Join-Path $pwd 'bin\Release\net48'
          if (-not (Test-Path $outDir)) {
            Write-Error "Output not found: $outDir"
            exit 1
          }
          Write-Host "=== LIST bin/Release/net48 ==="
          Get-ChildItem $outDir -Recurse | Select-Object FullName, Length | Format-Table -AutoSize

          # 若 AssemblyName 改过，这里自动找 *.exe
          $exe = Get-ChildItem $outDir -Filter *.exe | Select-Object -First 1
          if (-not $exe) {
            Write-Error "No EXE found in $outDir. Check <OutputType>WinExe</OutputType> and <AssemblyName> in csproj."
            exit 1
          }
          Write-Host "Found EXE: $($exe.FullName)"

      - name: Package full output
        shell: pwsh
        run: |
          $outDir = Join-Path $pwd 'bin\Release\net48'
          New-Item -ItemType Directory -Force -Path artifacts | Out-Null
          Copy-Item "$outDir\*" artifacts -Recurse -Force
          Write-Host "Packed files:"; Get-ChildItem artifacts | % { Write-Host " - " $_.Name }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: MirrorAudio-x64-net48
          path: artifacts
